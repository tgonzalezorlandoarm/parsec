name: Nightly Next Checks

on:
  schedule:
    # Every night at midnight
    - cron: "0 0 * * *"
  workflow_dispatch:
    inputs:
      rev:
        description: "Revision hash to run against"
        required: false
        default: ""

jobs:
  build-and-export-test-all-docker:
    runs-on: ubuntu-latest
    # If TEST_ALL_DOCKER_IMAGE is 'parsec-service-test-all' or any local image,
    # the following condition must evaluate true to execute this job
    # Else it must evaluate false to NOT execute this job
    # Unfortunately, env.TEST_ALL_DOCKER_IMAGE cannot be used here as the `env` context is not recognized at this level.
    if: ${{ false }} # env.TEST_ALL_DOCKER_IMAGE == 'parsec-service-test-all'
    steps:
    - uses: actions/checkout@v3
    - name: Build the docker container
      run: pushd e2e_tests/docker_image && docker build -t parsec-service-test-all -f parsec-service-test-all.Dockerfile . && popd
    - name: Export the docker container
      run: docker save parsec-service-test-all > /tmp/parsec-service-test-all.tar
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: parsec-service-test-all
        path: /tmp/parsec-service-test-all.tar

  all-providers:
    name: Various tests targeting a Parsec image with all providers included
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [build-and-export-test-all-docker]
    steps:
      - uses: actions/checkout@v2
      - name: Run the container to execute the test script
        uses: ./.github/actions/all_providers
        if: ${{ env.TEST_ALL_DOCKER_IMAGE == 'parsec-service-test-all' }}
        with:
          image-name: "${{ env.TEST_ALL_DOCKER_IMAGE }}"
          image-path: "/tmp"
          ci-flags-all-providers: "--next-branch-tracking"

  build-all-providers:
    name: Cargo check all-providers (current Rust stable & old compiler)
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [build-and-export-test-all-docker]
    steps:
      - uses: actions/checkout@v2
      - name: Run the container to execute the test script
        uses: ./.github/actions/build_all_providers
        if: ${{ env.TEST_ALL_DOCKER_IMAGE == 'parsec-service-test-all' }}
        with:
          image-name: "${{ env.TEST_ALL_DOCKER_IMAGE }}"
          image-path: "/tmp"
          ci-flags-all-providers: "--next-branch-tracking"

  mbed-crypto-provider:
    name: Integration tests using Mbed Crypto provider
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [build-and-export-test-all-docker]
    steps:
      - uses: actions/checkout@v2
      - name: Run the container to execute the test script
        uses: ./.github/actions/mbed_crypto_provider
        if: ${{ env.TEST_ALL_DOCKER_IMAGE == 'parsec-service-test-all' }}
        with:
          image-name: "${{ env.TEST_ALL_DOCKER_IMAGE }}"
          image-path: "/tmp"
          ci-flags-mbed-crypto-provider: "--next-branch-tracking"

  pkcs11-provider:
    name: Integration tests using PKCS 11 provider
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [build-and-export-test-all-docker]
    steps:
      - uses: actions/checkout@v2
      - name: Run the container to execute the test script
        uses: ./.github/actions/pksc11_provider
        if: ${{ env.TEST_ALL_DOCKER_IMAGE == 'parsec-service-test-all' }}
        with:
          image-name: "${{ env.TEST_ALL_DOCKER_IMAGE }}"
          image-path: "/tmp"
          ci-flags-pkcs11-provider: "--no-stress-test --next-branch-tracking"

  tpm-provider:
    name: Integration tests using TPM provider
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [build-and-export-test-all-docker]
    steps:
      - uses: actions/checkout@v2
      - name: Run the container to execute the test script
        uses: ./.github/actions/tpm_provider
        if: ${{ env.TEST_ALL_DOCKER_IMAGE == 'parsec-service-test-all' }}
        with:
          image-name: "${{ env.TEST_ALL_DOCKER_IMAGE }}"
          image-path: "/tmp"
          ci-flags-tpm-provider: "--next-branch-tracking"

  trusted-service-provider:
    name: Integration tests using Crypto Trusted Service provider
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [build-and-export-test-all-docker]
    steps:
      - uses: actions/checkout@v2
      - name: Run the container to execute the test script
        uses: ./.github/actions/trusted_service_provider
        if: ${{ env.TEST_ALL_DOCKER_IMAGE == 'parsec-service-test-all' }}
        with:
          image-name: "${{ env.TEST_ALL_DOCKER_IMAGE }}"
          image-path: "/tmp"
          ci-flags-trusted-service-provider: "--next-branch-tracking"
